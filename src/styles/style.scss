@import url("https://fonts.googleapis.com/css2?family=Roboto+Mono&family=Roboto:wght@400;500;700&display=swap");

$font-stack: "Roboto", sans-serif;
$font-stack-mono: "Roboto Mono", monospace;

$font-color-primary: rgb(139, 148, 158);
$font-color-secondary: rgb(240, 246, 252);
$font-color-blue: rgb(88, 166, 255);
$font-color-red: rgb(248, 81, 73);

$color-primary: rgb(13, 17, 23);
$color-secondary: rgb(22, 27, 34);
$color-grey-dark: rgb(33, 38, 45);
$color-grey-light: rgb(55, 59, 66);
$color-green-dark: rgb(35, 134, 54);
$color-green-light: rgb(56, 145, 75);
$color-black: rgb(1, 4, 9);
$color-red: rgb(218, 54, 51);

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

html,
body,
#root,
.app {
  width: 100vw;
  max-width: 100vw;
  overflow-x: hidden;

  height: 100vh;
  max-height: 100vh;
  overflow-y: hidden;

  font-family: $font-stack;
  color: $font-color-primary;
  background-color: $color-primary;
}

.app {
  display: flex;
  flex-direction: column;
}

button {
  cursor: pointer;
  font-family: $font-stack;
  border: none;
  outline: none;
}

input {
  font-family: $font-stack;
  border: none;
  outline: none;
}

ol {
  list-style-type: none;
}

main {
  flex: 1 1 auto;
  padding: 4vw;

  display: grid;
  grid-template-columns: 1.2fr 1fr;

  .picker {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 2rem;

    h1.counter {
      place-self: center;
    }
    .full {
      color: green;
    }
    .overflow {
      color: orangered;
    }

    section.lists {
      width: 100%;

      h1 {
      }

      // player buttons
      li.player {
        display: grid;
        grid-template-columns: min-content 1rem;
        grid-template-rows: 1fr;

        button.toggle {
          grid-column: 1 / 3;
          grid-row: 1 / 2;
          padding: 0.5em 1.6em 0.5em 0.8em;

          width: fit-content;

          white-space: nowrap; // no text wrapping, instead wrap the whole button to new line

          font-size: 1rem;

          border-radius: 1rem;
        }
        button.toggle:hover {
          filter: brightness(1.2);
        }

        button.remove {
          grid-column: 2 / 3;
          grid-row: 1 / 2;
          z-index: 1;

          background: none;
          color: black;
        }
        button.remove:hover {
          color: (rgb(139, 139, 139));
        }
      }

      button.editableButton,
      input.editableInput {
        font-size: 1rem;

        border-radius: 1rem;
        padding: 0.5em 0.8em;
      }

      .inputs {
        position: relative;
        button.plus {
          position: absolute;
          right: -2rem;
          bottom: 0;

          font-size: 2rem;

          background: none;
          color: white;
        }
      }

      ol.selectedPlayers {
        display: grid;
        grid-template-rows: 2rem 2rem;
        grid-auto-rows: 2rem;
        grid-template-columns: 1fr 1fr 1fr 1fr;
        gap: 1rem;
        align-items: center;
        place-items: center;

        .selected {
          background-color: greenyellow;
        }
      }
    }

    ol.unselectedPlayers {
      display: flex;
      flex-wrap: wrap;
      gap: 1rem;
    }
  }

  button.reset {
  }
}

.shuffler {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: 2rem 20rem 2rem;
  grid-auto-rows: 2rem;
  justify-items: center;
  place-items: center;

  h1 {
    grid-column: 1 / 3;

    font-size: 2rem;
  }
  ol {
    grid-column: 1 / 3;

    li {
      font-family: $font-stack-mono;
      font-size: 1.3rem;
    }
  }

  button {
    font-size: 1.5rem;
  }

  button.shuffle {
  }
  button.copy {
  }

  .popup {
    grid-column: 2 / 3;
  }
}

footer {
  flex: 0 1 auto;

  text-align: center;
  padding: 0.65rem;
  font-size: 0.65rem;

  a {
    text-decoration: none;
    color: $font-color-blue;
  }
}
