@import url("https://fonts.googleapis.com/css2?family=Roboto+Mono&family=Roboto:wght@400;500;700&display=swap");

$font-stack: "Roboto", sans-serif;
$font-stack-mono: "Roboto Mono", monospace;

$font-color-primary: rgb(139, 148, 158);
$font-color-secondary: rgb(240, 246, 252);
$font-color-blue: rgb(88, 166, 255);
$font-color-red: rgb(248, 81, 73);

$color-primary: rgb(13, 17, 23);
$color-secondary: rgb(22, 27, 34);
$color-grey-dark: rgb(33, 38, 45);
$color-grey-light: rgb(55, 59, 66);
$color-green-dark: rgb(35, 134, 54);
$color-green-light: rgb(56, 145, 75);
$color-black: rgb(1, 4, 9);
$color-red: rgb(218, 54, 51);

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

html,
body,
#root,
.app {
  width: 100vw;
  max-width: 100vw;
  overflow-x: hidden;

  height: 100vh;
  max-height: 100vh;
  overflow-y: hidden;

  font-family: $font-stack;
  color: $font-color-primary;
  background-color: $color-primary;
}

.app {
  display: flex;
  flex-direction: column;
}

button {
  cursor: pointer;
  font-family: $font-stack;
  border: none;
  outline: none;
}

%button-standard {
  width: fit-content;
  white-space: nowrap; // no text wrapping, instead wrap the whole button to new line
  padding: 0.5rem 0.8rem;
  border-radius: 1rem;

  background-color: $color-secondary;

  color: $font-color-secondary;
  font-size: 1rem;
}

%button-standard:active {
  filter: brightness(1.3) !important; // override hover effect
}

input {
  font-family: $font-stack;
  border: none;
  outline: none;
}

ol {
  list-style-type: none;
}

main {
  flex: 1 1 auto;
  padding: 4vw;

  display: grid;
  grid-template-columns: 1fr 1fr;

  .picker {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 2rem;

    h1.counter {
      place-self: center;
      font-size: 2rem;
      font-weight: 700;
    }
    .full {
      color: $color-green-dark;
    }
    .overflow {
      color: $color-red;
    }

    section.lists {
      width: 100%;
      display: flex;
      flex-direction: column;
      gap: 2rem;

      h2 {
        font-size: 1.5rem;
        font-weight: 500;
      }

      // player buttons
      li.player {
        display: grid;
        grid-template-columns: min-content 1.2rem;
        grid-template-rows: 1fr;

        button.toggle {
          grid-column: 1 / 3;
          grid-row: 1 / 2;

          @extend %button-standard;

          padding-right: 1.8rem; // space for "X" button
        }

        button.remove {
          grid-column: 2 / 3;
          grid-row: 1 / 2;
          z-index: 1;

          background: none;
          color: $font-color-secondary;
        }
        button.remove:hover {
          color: $font-color-red;
        }
      }

      button.editableButton,
      input.editableInput {
        @extend %button-standard;

        border: 2px solid $color-grey-light;
      }
      button.editableButton:hover,
      input.editableInput:hover {
        filter: brightness(1.2);
      }

      .inputs {
        position: relative;
        button.plus {
          position: absolute;
          right: -2rem;
          bottom: 0;

          font-size: 2rem;

          background: none;
          color: $font-color-secondary;
        }
      }

      ol.selectedPlayers {
        display: grid;
        grid-template-rows: 2rem 2rem 2rem;
        grid-auto-rows: 2rem;
        grid-template-columns: 1fr 1fr 1fr 1fr;
        gap: 1rem;
        align-items: center;
        place-items: center;

        button.toggle {
          padding: 0.5rem 0.8rem; // hide the remove button for selected players

          border: 2px solid $color-green-dark;
        }
        button.toggle:hover {
          border: 2px solid $color-red;
          background-color: $font-color-red;
        }

        button.remove {
          display: none; // hide the "X" button for selected players
        }
      }
    }

    ol.unselectedPlayers {
      display: flex;
      flex-wrap: wrap;
      gap: 1rem;

      button.toggle {
        border: 2px solid $color-grey-light;
      }
      button.toggle:hover {
        border: 2px solid $color-green-dark;
      }
    }

    button.reset {
      @extend %button-standard;
      border: 2px solid $color-grey-light;
      color: $font-color-red;
    }
    button.reset:hover {
      border: 2px solid $font-color-red;
      color: $font-color-secondary;
      background-color: $color-red;
    }
  }
}

.shuffler {
  justify-self: center;

  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-template-rows: min-content 20rem min-content 1.5rem;

  justify-items: center;
  place-items: center;

  h1 {
    grid-column: 1 / 3;

    font-size: 2rem;
    font-weight: 700;
  }

  ol.shuffledPlayers {
    grid-column: 1 / 3;

    li {
      font-family: $font-stack-mono;
      font-size: 1.3rem;
    }
  }

  button {
    font-size: 1.5rem;
  }

  button.shuffle,
  button.copy {
    @extend %button-standard;
    border: 2px solid $color-grey-light;
  }

  button.shuffle:hover,
  button.copy:hover {
    filter: brightness(1.2);
  }

  .popup {
    grid-column: 2 / 3;
    margin-top: 1rem;
  }
}

.randomMap {
  place-self: center;
  grid-column: 2 / 3;

  display: grid;
  grid-template-columns: min-content min-content;
  grid-template-rows: min-content min-content;
  gap: 1rem;
  align-items: center;

  h2 {
    grid-column: 1 / 3;

    white-space: nowrap;

    font-size: 1.5rem;
    font-weight: 500;
  }

  button.roll {
    @extend %button-standard;
    border: 2px solid $color-grey-light;
  }
  button.roll:hover {
    filter: brightness(1.2);
  }
}

footer {
  flex: 0 1 auto;

  text-align: center;
  padding: 0.65rem;
  font-size: 0.65rem;

  a {
    text-decoration: none;
    color: $font-color-blue;
  }
}

@media screen and (max-width: 900px) {
  html,
  body,
  #root,
  .app {
    overflow-y: visible;
  }

  main {
    grid-template-columns: 1fr;

    .picker {
      grid-column: 1 / 2;

      gap: 1rem;
    }

    .shuffler {
      grid-column: 1 / 2;

      grid-template-rows: min-content auto min-content 1.5rem;

      h1 {
        font-size: 1.5rem;
      }
      ol {
        li {
          font-size: 1.1rem;
        }
      }
    }

    .randomMap {
      grid-column: 1 / 2;
    }
  }
}
